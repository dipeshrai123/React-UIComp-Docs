(this["webpackJsonpreact-uicomp-docs"]=this["webpackJsonpreact-uicomp-docs"]||[]).push([[0],{125:function(e,t,a){},126:function(e,t,a){"use strict";a.r(t);var n=a(0),l=a.n(n),o=a(32),r=a.n(o),c=a(31),i=a(79),s=a(68),m=a(17);a(10),a(24),a(69);new(a(81).a);var u,d={LOADING:"".concat(u="SAMPLE","_LOADING"),SUCCESS:"".concat(u,"_SUCCESS"),ERROR:"".concat(u,"_ERROR"),actionName:u};var h={sampleLoader:!1};var p=Object(c.c)({samples:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:h,t=arguments.length>1?arguments[1]:void 0,a=t.type;switch(a){case d.LOADING:return Object(m.a)(Object(m.a)({},e),{},{sampleLoader:!0});case d.SUCCESS:case d.ERROR:return Object(m.a)(Object(m.a)({},e),{},{sampleLoader:!1});default:return e}}}),E=a(12),g=a(3),f=function(){return l.a.createElement("div",{className:"notfound"},"404 PAGE NOT FOUND!!!")},b=function(e){var t=e.children;return l.a.createElement("h1",{className:"title"},t)},v=function(e){var t=e.children;return l.a.createElement("h2",{className:"title title--secondary"},t)},w=function(e){var t=e.children;return l.a.createElement("p",{className:"paragraph"},t)},y=a(75),N=a.n(y);function k(e){var t=e.children;return Object(n.useLayoutEffect)((function(){return N.a.highlightAll()}),[]),l.a.createElement("pre",{className:"line-numbers",style:{borderRadius:4}},l.a.createElement("code",{className:"language-js"},t.trim()))}var _=function(){return Object(n.useEffect)((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"Quick Start"),l.a.createElement("section",null,l.a.createElement(w,null,"Implementing good quality animations and creating reusable components over and over again would be quite complicated and requires lots of initial set up. React UI Comp provides you very useful components and animation tools which helps you to build incredible UI and user experience."),l.a.createElement(w,null,"What follows within the fundamentals section of this documentation is a tour of the most important aspects of React UI Comp. It should cover enough for you to know how to build your typical react application, and give you the background that you need to dive deeper into the more advanced parts of React UI Comp.")),l.a.createElement("section",null,l.a.createElement(v,null,"Prerequisite"),l.a.createElement(w,null,"If you're already familiar with JavaScript, React and React Router DOM, then you'll be able to get moving with React UI Comp quickly! If not, we highly recommend you to gain some basic knowledge first, then come back here when you're done.")),l.a.createElement("section",null,l.a.createElement(v,null,"Installation"),l.a.createElement(k,null,"\n// npm\nnpm install react-uicomp\n\n// yarn\nyarn add react-uicomp")))},T=function(){return l.a.useEffect((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"Why React UI Comp ?"),l.a.createElement("section",null,l.a.createElement(w,null,"There are lots of component and animation library out there. But having good UI component with animations aren't taken into account. If you want to add some animations to your own component then it can help you tremendously. And also if you want more flexible components that you use over and over again then it also provides that."),l.a.createElement(w,null,"It provides some useful hocs, hooks and functions that allows you to write smooth animations very easily and some very basic UI Components that you need frequently."),l.a.createElement("iframe",{src:"https://codesandbox.io/embed/parallex-header-navigation-83s30?fontsize=14&hidenavigation=1&theme=dark&view=preview",style:{width:"100%",height:500,border:0,borderRadius:4,overflow:"hidden"},title:"Parallex Header Navigation",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"})))},C=function(){return l.a.useEffect((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"Navigation"),l.a.createElement("section",null,l.a.createElement(w,null,"Navigation lets you define all the routes (public, private and protected) and user roles."),l.a.createElement(w,null,"But, What exactly are public, private and protected routes ?"),l.a.createElement("ul",{className:"list"},l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"Public routes"))," ","are those routes which can be accessed with or without login."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"Private routes"))," ","are those routes which cannot be accessed without login."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"Protected routes"))," ","are those types of public routes which cannot be accessed if a user is logged in.")),l.a.createElement(w,null,"We also should define ",l.a.createElement("span",{className:"highlight"},"userRoles")," who can access different routes. To define these React UI Comp provides a Higher Order Component (HOC) called"," ",l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"withNavigation()"))," ",". It allows us to define all those routes and roles by passing them as a prop.")),l.a.createElement("section",null,l.a.createElement(v,null,"withNavigation()"),l.a.createElement(w,null,l.a.createElement("b",null,"withNavigation()")," manages all the routes and user roles for you. Usually you should export a root component with"," ",l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"withNavigation()"))," ","HOC."," ",l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"withNavigation()"))," ","accepts component as its first argument and object with publicPaths, privatePaths, userRoles and routerType as second argument."),l.a.createElement(w,null,l.a.createElement("b",null,"Configuring publicPaths, privatePaths and userRoles")),l.a.createElement("ol",{className:"list"},l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"routerType"))," ",'( optional ) : It can be either "hash" or "browser". Default "browser"'),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"publicPaths"))," ","accepts an array of object with following keys:"),l.a.createElement("ol",{className:"list list--nested list--alpha"},l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"name ( string )")," : Defines the name for a path and used as a key for useNavigation()'s route keys if key is not passed."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"path ( string )")," : Defines the path for a component."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"component ( Component )")," : Defines a component for a path."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"restricted ( boolean )")," : If true then it is protected route otherwise public."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"subPaths ( array )"),"( optional ) : Accepts array of object with same keys as publicPaths. It is used to make sub routes ( full-page routing ) rather than making all routes individually."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"nestedPaths ( array )"),"( optional ) : Accepts array of object with same keys as publicPaths. It is used to make nested routes ( component routing ).")),l.a.createElement("br",null),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"privatePaths"))," ","accepts an array of object with following keys:"),l.a.createElement("ol",{className:"list list--nested  list--alpha"},l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"name ( string )")," : Defines the name for a path used as a key for useNavigation()'s route keys if key is not passed."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"path ( string )")," : Defines the path for a component."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"component ( Component )")," : Defines a component for a path."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"subPaths ( array )"),"( optional ) : Accepts array of object with same keys as privatePaths. It is used to make sub routes ( full-page routing ) rather than making all routes individually."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"nestedPaths ( array )"),"( optional ) : Accepts array of object with same keys as privatePaths. It is used to make nested routes ( component routing ).")),l.a.createElement("br",null),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"userRoles"))," ","accepts an object with any number of keys which defines the access routes for a user. You can use `*` for giving access to any routes for a user. Or you can give particular routes and its sub routes then you can use as `route_name/*`")),l.a.createElement(k,null,"\n// format for userRole\nuserRoles: { [role_name<string>]: { access: Array<string> } }\n          ")),l.a.createElement("section",null,l.a.createElement(v,null,"Example"),l.a.createElement(w,null,"Basic example of routing. First create publicPaths, privatePaths and userRoles and use with withNavigation() hoc."),l.a.createElement(k,null,'\n// routes.js\nimport Page1 from "./Pages/Page1";\nimport Page2 from "./Pages/Page2";\n\n// Array of object having name, path, component and restricted.\nexport const publicPaths = [\n  {\n    name: "Public",\n    path: "/public",\n    component: Page1,\n    restricted: true,\n  },\n];\n\n// Array of object having name, path and component.\nexport const privatePaths = [\n  {\n    name: "Private",\n    path: "/private",\n    component: Page2,\n  },\n];\n\n// Define user role and provide access routes.\nexport const userRoles = { \n    user: { access: ["/public"] }, \n    admin:  { access: ["*"] },\n};\n          '),l.a.createElement(k,null,'\n// app.js\nimport React from "react";\nimport { withNavigation } from "react-uicomp";\nimport { publicRoutes, privateRoutes, userRoles } from "./routes";\n\nconst App = () => {\n  return (\n    // ...\n  );\n};\n\nexport default withNavigation(App, {\n  publicPaths,\n  privatePaths,\n  userRoles,\n});\n          ')))},j=function(){return l.a.useEffect((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"Auth"),l.a.createElement("section",null,l.a.createElement(w,null,"Auth provides 2 different HOCs which handles all the authentications defined by"," ",l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"withNavigation()"))," ","HOC.")),l.a.createElement("ol",{className:"list"},l.a.createElement("li",{className:"list__item"},l.a.createElement(w,null,l.a.createElement("b",null,"Auth.Provider"),l.a.createElement("br",null),"It lets you define the current state of a user i.e. ( logged state and logged role ) and allows us to define global state which can be accessed from any component with useAuth() hook."),l.a.createElement(w,null,"It accepts two props :"),l.a.createElement("ol",{className:"list list--nested list--alpha"},l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"config (object)")),l.a.createElement("br",null),"You must pass an config object to config prop. Object should be of following shape :"),l.a.createElement("ul",{className:"list list--nested"},l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"isLoggedIn ( boolean )")," : Defines logged state of a user"),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"userRole ( string )")," : Defines current role of a user")),l.a.createElement("br",null),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"state ( object )")),l.a.createElement("br",null),"It can be used as a global state which can accept any object with any keys. It is mostly used to change the config state. For example: state object could be an object with handleLogout method which modifies the isLoggedIn key defined in config object."))),l.a.createElement("li",{className:"list__item"},l.a.createElement(w,null,l.a.createElement("b",null,"Auth.Screens"),l.a.createElement("br",null),"It returns all the authenticated screens based on the current state of a user and all the routes provided to"," ",l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"withNavigation()"))," ","HOC. Component with Auth.Provider HOC should be wrapped with withNavigation() hoc."),l.a.createElement(w,null,l.a.createElement(w,null,"It accepts one prop :"),l.a.createElement("ol",{className:"list list--nested list--alpha"},l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"path (string)(optional)")),l.a.createElement("br",null),"It is required for nested routes. By default its value is taken as null or '/';")),l.a.createElement(k,null,"\n<Auth.Provider {...propsToThis}>\n  <Auth.Screens {...propsToThis} />\n</Auth.Provider>\n              ")))),l.a.createElement("section",null,l.a.createElement(v,null,"Example"),l.a.createElement(k,null,'\n// app.js \nimport { withNavigation, Auth } from "react-uicomp";\nimport { publicPaths, privatePaths, userRoles } from "./routes";\n\nconst App = () => {\n  const [config, setConfig] = useState({ isLoggedIn: false, userRole: "user" });\n\n  return (\n      <Auth.Provider\n        config={config}\n        state={{\n          logout: () => {\n            setConfig({ isLoggedIn: false, userRole: "user" });\n          }\n        }}\n      >\n        <Auth.Screens />\n      </Auth.Provider>\n  );\n};\n\nexport default withNavigation(App, {\n  publicPaths,\n  privatePaths,\n  userRoles,\n});\n          ')))},O=function(){return l.a.useEffect((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"useNavigation()"),l.a.createElement("section",null,l.a.createElement(w,null,l.a.createElement("span",{className:"highlight"},"useNavigation()")," is a hook which gives access to the navigation object providing you to navigate between different screens, providing you all accessible routes according to the current state of a user ( logged state and logged role ). It is also very useful for a component which is not directly a route defined in public or private paths because it doesn't have access to history prop directly."),l.a.createElement(w,null,l.a.createElement("span",{className:"highlight"},"useNavigation()")," returns an object with the following properties :"),l.a.createElement("ul",{className:"list"},l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"navigation ( object )")," : Object for handling navigation and provides all authenticated routes name and path"),l.a.createElement("ul",{className:"list list--nested"},l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"routes ( object )")," : Object with name key you defined in ",l.a.createElement("b",null,"publicPaths")," and ",l.a.createElement("b",null,"privatePaths")," ","in ",l.a.createElement("b",null,"withNavigation()")," and values are the object of name and path for a defined key."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"navigate ( function )")," : Function which takes either string or an object similar to"," ",l.a.createElement("b",null,"react-router-dom"),"\u2019s history.push() function."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"goBack ( function )")," : Function which will navigate to the previous screen."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"goForward ( function )")," : Function which will navigate to the next screen if history is available.")),l.a.createElement("br",null),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"history ( object )")," : History object same as react-router-doms's history object."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"location ( object )")," : Location object same as react-router-dom's location object."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"params ( object )")," : Params object same as react-router-dom's params object."))),l.a.createElement("section",null,l.a.createElement(v,null,"Example"),l.a.createElement(k,null,"\nimport { useNavigation } from 'react-uicomp';\n\nconst { navigation, history, location, params } = useNavigation()\n          ")))},A=function(){return l.a.useEffect((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"useAuth()"),l.a.createElement("section",null,l.a.createElement(w,null,l.a.createElement("span",{className:"highlight"},"useAuth()")," is a hook which gives access to the config object and state object defined in"," ",l.a.createElement("span",{className:"highlight"},"<Auth.Provider>")," HOC directly. By default it returns an object with"," ",l.a.createElement("span",{className:"highlight"},"isLoggedIn"),","," ",l.a.createElement("span",{className:"highlight"},"userRole")," and all the keys passed inside the state object.")),l.a.createElement("section",null,l.a.createElement(v,null,"Example"),l.a.createElement(k,null,'\n// import useAuth\nimport { useAuth } from "react-uicomp";\n\nexport default function() {\n    \n    // config and state can be accessed with useAuth()\n    const { isLoggedIn, userRole, logout } = useAuth();\n    \n    return () {\n        // ...\n    }\n}\n          ')))},I=function(){return l.a.useEffect((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"Theme"),l.a.createElement("section",null,l.a.createElement(w,null,"Theme allows you to handle the themes for your application. Theme provides a ",l.a.createElement("span",{className:"highlight"},"<Theme.Provider>")," HOC to handle any number of themes you want to add into your application. It is mostly useful if you want to implement light themes and dark themes.")),l.a.createElement("section",null,l.a.createElement(v,null,"Configure your themes"),l.a.createElement(w,null,l.a.createElement("b",null,"Theme.Provider")," HOC accepts theme prop which accepts the theme object with the following properties :"),l.a.createElement("ul",{className:"list"},l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"dark ( boolean )")," : Either it is a light theme or dark theme."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"colors ( object )")," : Various colors to define a particular theme."),l.a.createElement("ul",{className:"list list--nested"},l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"backgroundColor ( string )")),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"primaryColor ( string )")),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"secondaryColor ( string )")),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"highlightColor ( string )")),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"textColor ( string )")),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"borderColor ( string )")),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"cardColor ( string )"))))),l.a.createElement("section",null,l.a.createElement(v,null,"Example"),l.a.createElement(k,null,'\n// import Theme from here\nimport { Navigation, Auth, Theme } from "react-uicomp";\n\n...\n\n// Dark theme object variable\nconst darkTheme = {\n    dark: true,\n    // colors cannot have other keys except these...\n    colors: {\n        backgroundColor: "#1F1B24",\n        primaryColor: "#1A6AA7",\n        secondaryColor: "#989898",\n        highlightColor: "#FA0404",\n        textColor: "#FFFFFF",\n        borderColor: "#353535",\n        cardColor: "#383838",\n    }\n}\n\n// Light theme object variable\nconst lightTheme = {\n    dark: false,\n    colors: {\n        backgroundColor: "#F8F8F8",\n        primaryColor: "#2196F3",\n        secondaryColor: "#989898",\n        highlightColor: "#EB4034",\n        textColor: "#353535",\n        borderColor: "#E1E1E1",\n        cardColor: "#FFFFFF",\n    },\n}\n\nconst App = () => {\n    const [ activeTheme, setActiveTheme ] = useState("light");\n    \n    const theme = activeTheme === "light" ? lightTheme : darkTheme;\n    \n    const toggleTheme = () => {\n      setActiveTheme(prev => prev === "light" ? darkTheme : lightTheme);\n    }\n    \n    return (\n      <Theme.Provider theme={theme} toggleTheme={toggleTheme}>\n        <Auth.Provider>\n          <Auth.Screens />\n        </Auth.Provider>\n      </Theme.Provider>\n    )\n};\n\n...\n          ')))},x=function(){return l.a.useEffect((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"useTheme()"),l.a.createElement("section",null,l.a.createElement(w,null,l.a.createElement("span",{className:"highlight"},"useTheme()")," returns an object which provides current active theme and toggleTheme function. The object consists of following properties :"),l.a.createElement("ul",{className:"list"},l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"dark ( boolean )")," : Either it is a light theme or dark theme."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"colors ( object )")," : Various colors defined in"," ",l.a.createElement("span",{className:"highlight"},"<Theme.Provider>")," HOC."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},"toggleTheme ( function )")," : Function which is passed in"," ",l.a.createElement("span",{className:"highlight"},"<Theme.Provider>")," HOC."))),l.a.createElement("section",null,l.a.createElement(v,null,"Example"),l.a.createElement(k,null,'\n// import useTheme\nimport { useTheme } from "react-uicomp";\n\nexport default function() {\n    \n    // It has theme object and toggleTheme function\n    const { colors, toggleTheme } = useTheme();\n    \n    return () {\n        {/* use it like this which is changed automatically when toggleTheme function is called */}\n        <div style={{ color: colors.primaryColor }}>\n        \tParagraph Text\n        </div>\n    }\n}\n          ')))};function D(){var e=Object(g.j)(1);return l.a.createElement("div",null,l.a.createElement(g.a,{style:{width:100,height:100,borderRadius:4,background:"#39F",opacity:e.value}}),l.a.createElement("br",null),l.a.createElement("button",{className:"button",onClick:function(){return e.value=1}},"Show"),l.a.createElement("div",{className:"gap"}),l.a.createElement("button",{className:"button",onClick:function(){return e.value=0}},"Hide"))}var S=function(){return l.a.useEffect((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"useAnimatedValue()"),l.a.createElement("section",null,l.a.createElement(w,null,l.a.createElement("span",{className:"highlight"},"useAnimatedValue()")," is a very flexible and powerful hook that lets you define animated values. Its value is preserved until the component unmounts and doesn\u2019t change during the state change and re-render of a component."),l.a.createElement(w,null,l.a.createElement("span",{className:"highlight"},"useAnimatedValue()")," returns an animated node initialized at",l.a.createElement("span",{className:"highlight"},"initialValue"),". Animated Node is a special type of Node that has ",l.a.createElement("span",{className:"highlight"},"value"),"property which is automatically animated if initialValue changes at some point or if we set its value to some number."),l.a.createElement(w,null,"Let us define an animated value called"," ",l.a.createElement("span",{className:"highlight"},"opacity"),"."),l.a.createElement(k,null,"const opacity = useAnimatedValue(1)"),l.a.createElement(w,null,"Here we create an animated node called"," ",l.a.createElement("span",{className:"highlight"},"opacity")," at an initial value initial value ",l.a.createElement("span",{className:"highlight"},"1"),". And opacity has a property called ",l.a.createElement("span",{className:"highlight"},"value"),". At any time we set opacity.value to some number then it changes its value from 1 to that number smoothly."),l.a.createElement(w,null,"We can change the ",l.a.createElement("span",{className:"highlight"},"opacity.value")," to"," ",l.a.createElement("span",{className:"highlight"},"0")," if a user clicks a button. It auto animates the value from 1 to 0."),l.a.createElement(k,null,"<button onClick = { () => opacity.value = 0 }>Hide</button>")),l.a.createElement("section",null,l.a.createElement(v,null,"Demo"),l.a.createElement(D,null)),l.a.createElement("section",null,l.a.createElement(v,null,"Example"),l.a.createElement(k,null,'\nimport React from "react";\nimport { AnimatedBlock, useAnimatedValue } from "react-uicomp";\n\nexport default function UseAnimatedValue() {\n  const opacity = useAnimatedValue(1);\n\n  return (\n    <div>\n      <AnimatedBlock\n        style={{\n          width: 100,\n          height: 100,\n          borderRadius: 4,\n          background: "#39F",\n          opacity: opacity.value,\n        }}\n      />\n      <br />\n      <button onClick={() => (opacity.value = 1)}>Show</button>\n      <button onClick={() => (opacity.value = 0)}>Hide</button>\n    </div>\n  );\n}\n          ')))},R=function(){return l.a.useEffect((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"AnimatedBlock"),l.a.createElement("section",null,l.a.createElement(w,null,"Animated Node returned from"," ",l.a.createElement("span",{className:"highlight"},"useAnimatedValue()")," hook is not directly read by ",l.a.createElement("span",{className:"highlight"},"HTMLElement"),". It needs a special type of element that can read it. So, we have an"," ",l.a.createElement("span",{className:"highlight"},"<AnimatedBlock>")," component which inherits all properties of the"," ",l.a.createElement("span",{className:"highlight"},"<div>")," element and it can accept the animated nodes returned from"," ",l.a.createElement("span",{className:"highlight"},"useAnimatedValue()")," hook."),l.a.createElement("section",null,l.a.createElement(v,null,"Demo"),l.a.createElement(D,null)),l.a.createElement(v,null,"Example"),l.a.createElement(k,null,'\nimport React from "react";\nimport { AnimatedBlock, useAnimatedValue } from "react-uicomp";\n\nexport default function UseAnimatedValue() {\n  const opacity = useAnimatedValue(1);\n\n  return (\n    <div>\n      <AnimatedBlock\n        style={{\n          width: 100,\n          height: 100,\n          borderRadius: 4,\n          background: "#39F",\n          opacity: opacity.value,\n        }}\n      />\n      <br />\n      <button onClick={() => (opacity.value = 1)}>Show</button>\n      <button onClick={() => (opacity.value = 0)}>Hide</button>\n    </div>\n  );\n}\n       ')))};function P(){var e=Object(g.j)(1);return l.a.createElement("div",null,l.a.createElement(g.a,{style:{width:100,height:100,borderRadius:4,background:"#39F",opacity:e.value,transform:Object(g.i)(e.value,[0,1],["scale(0.5)","scale(1)"])}}),l.a.createElement("br",null),l.a.createElement("button",{className:"button",onClick:function(){return e.value=1}},"Show"),l.a.createElement("div",{className:"gap"}),l.a.createElement("button",{className:"button",onClick:function(){return e.value=0}},"Hide"))}var M=function(){return Object(n.useEffect)((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"interpolate()"),l.a.createElement("section",null,l.a.createElement(w,null,"The basic concept of interpolate is to map the given value to another value based on given input and output range."),l.a.createElement(w,null,"React UI Comp also provides a utility function"," ",l.a.createElement("span",{className:"highlight"},"interpolate()")," which can interpolate both animated nodes and normal numeric values from a given set of input range to output range. Output ranges can be string or numbers. By default, the value is extrapolated beyond the output range in case of numbers. It can be clamped to left / right or both according to your need."),l.a.createElement(w,null,"A basic mapping of a animated node from input range 0 to 1 to 0 to 500 be",l.a.createElement(k,null,"\n// Here opacity is animated node so it has .value property\ninterpolate(opacity.value, [0, 1], [0, 500])\n        ")),l.a.createElement(w,null,"Let's take an example from the previous section. The box changes itsopacity to 0 when we click the hide button and to 1 when we click the show button. We also want the box to shrink to .5 scale if opacity is 0 and to 1 if opacity is 1.")),l.a.createElement("section",null,l.a.createElement(v,null,"Demo"),l.a.createElement(P,null)),l.a.createElement("section",null,l.a.createElement(v,null,"Example"),l.a.createElement(k,null,'\nimport React from "react";\nimport { AnimatedBlock, useAnimatedValue, interpolate } from "react-uicomp";\n\nexport default function Interpolate() {\n  const opacity = useAnimatedValue(1);\n\n  return (\n    <div>\n      <AnimatedBlock\n        style={{\n          width: 100,\n          height: 100,\n          borderRadius: 4,\n          background: "#39F",\n          opacity: opacity.value,\n          transform: interpolate(opacity.value, [0, 1], ["scale(0.5)", "scale(1)"]),\n        }}\n      />\n      <br />\n      <button onClick={() => (opacity.value = 1)}>Show</button>\n      <button onClick={() => (opacity.value = 0)}>Hide</button>\n    </div>\n  );\n}\n          ')))},F=function(){return Object(n.useEffect)((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"Dropdown"),l.a.createElement("section",null,l.a.createElement(w,null,"When it comes to creating a dropdown component we should also think of small things such as dismiss the dropdown when clicked outside, some small animations and position of a dropdown. It requires some work to handle all those small details."," "),l.a.createElement(w,null,"React UI Comp comes with a"," ",l.a.createElement("span",{className:"highlight"},"<Dropdown>")," component which handles all those things for you. It converts any component into a dropdown component very easily.")),l.a.createElement("section",null,l.a.createElement(v,null,"Demo"),l.a.createElement(g.c,{triggerElement:function(){return l.a.createElement("button",{className:"button"},"Toggle Menu")}},l.a.createElement("div",{style:{background:"#FFF",padding:10,border:"1px solid #F1F1F1",boxShadow:"0px 2px 4px rgba(0, 0, 0, 0.2)"}},"I am Dropdown Content"))),l.a.createElement("section",null,l.a.createElement(v,null,"Example"),l.a.createElement(w,null,"You can create any component a trigger element i.e. element which toggles the dropdown."," ",l.a.createElement("span",{className:"highlight"},"triggerElement")," prop accepts a function which handles triggering of the dropdown and children inside"," ",l.a.createElement("span",{className:"highlight"},"<Dropdown>")," component is the content which gets toggled.",l.a.createElement(k,null,'\n<Dropdown triggerElement={() => <button>Toggle Menu</button>}>\n  <div\n    style={{\n      background: "#FFF",\n      padding: 10,\n      border: "1px solid #F1F1F1",\n      boxShadow: "0px 2px 4px rgba(0, 0, 0, 0.2)"\n    }}\n  >\n    I am Dropdown Content\n  </div>\n</Dropdown>\n          '))),l.a.createElement("section",null,l.a.createElement(v,null,"Props"),l.a.createElement("table",{className:"table"},l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Props"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"),l.a.createElement("th",null,"Default"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"children"),l.a.createElement("td",null,"ReactNode"),l.a.createElement("td",null,"React Node which will be the dropdown content"),l.a.createElement("td",null,"-")),l.a.createElement("tr",null,l.a.createElement("td",null,"triggerElement"),l.a.createElement("td",null,"function({ active }) => ReactNode"),l.a.createElement("td",null,"Function which should return the element which will trigger the dropdown"),l.a.createElement("td",null,"-")),l.a.createElement("tr",null,l.a.createElement("td",null,"active(optional)"),l.a.createElement("td",null,"boolean"),l.a.createElement("td",null,"Sets default state of dropdown, either it is active or not by default"),l.a.createElement("td",null,"false")),l.a.createElement("tr",null,l.a.createElement("td",null,"isAnimated(optional)"),l.a.createElement("td",null,"boolean"),l.a.createElement("td",null,"Should animate or not while toggling between dropdown"),l.a.createElement("td",null,"true")),l.a.createElement("tr",null,l.a.createElement("td",null,"animationType(optional)"),l.a.createElement("td",null,'"fade" | "expand" | "elastic"'),l.a.createElement("td",null,"Type of animation for dropdown"),l.a.createElement("td",null,'"expand"')),l.a.createElement("tr",null,l.a.createElement("td",null,"dropdownStyles(optional)"),l.a.createElement("td",null,"style"),l.a.createElement("td",null,"Style object to style the dropdown"),l.a.createElement("td",null,"-")),l.a.createElement("tr",null,l.a.createElement("td",null,"placement(optional)"),l.a.createElement("td",null,'"bottomleft" | "bottommiddle" | "bottomright" | "topleft" | "topmiddle" | "topright"'),l.a.createElement("td",null,"Defines the placement of dropdown"),l.a.createElement("td",null,'"bottomright"')),l.a.createElement("tr",null,l.a.createElement("td",null,"dismissOnOutsideClick(optional)"),l.a.createElement("td",null,"boolean"),l.a.createElement("td",null,"Should dismiss dropdown if we click outside dropdown"),l.a.createElement("td",null,"true")),l.a.createElement("tr",null,l.a.createElement("td",null,"dismissOnInsideClick(optional)"),l.a.createElement("td",null,"boolean"),l.a.createElement("td",null,"Should dismiss dropdown if we click on content inside dropdown"),l.a.createElement("td",null,"false")),l.a.createElement("tr",null,l.a.createElement("td",null,"toggleOnTriggerElementClick(optional)"),l.a.createElement("td",null,"boolean"),l.a.createElement("td",null,"Should toggle the dropdown if we click trigger element"),l.a.createElement("td",null,"false"))))))},U=function(){return Object(n.useEffect)((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"Dropdown Menu"),l.a.createElement("section",null,l.a.createElement(w,null,"UI component for Dropdown Element")),l.a.createElement("section",null,l.a.createElement(v,null,"Demo"),l.a.createElement(g.c,{animationType:"expand",placement:"bottommiddle",triggerElement:function(){return l.a.createElement("button",{className:"button"},"Toggle Menu")}},l.a.createElement(g.d,null,l.a.createElement(g.e,{onClick:function(){return!1}},"Item 1"),l.a.createElement(g.e,{onClick:function(){return!1}},"Item 2"),l.a.createElement(g.f,null),l.a.createElement(g.e,{onClick:function(){return!1},danger:!0},"Item 3")))),l.a.createElement("section",null,l.a.createElement(v,null,"DropdownMenu"),l.a.createElement(w,null,"Wrapper for wrapping all the dropdown items for default styling provided by ",l.a.createElement("span",{className:"highlight"},"react-uicomp"))),l.a.createElement("section",null,l.a.createElement(v,null,"Props"),l.a.createElement("table",{className:"table"},l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Props"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"),l.a.createElement("th",null,"Default"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"children"),l.a.createElement("td",null,"ReactNode"),l.a.createElement("td",null,"Should contain list of dropdown items"),l.a.createElement("td",null,"-")),l.a.createElement("tr",null,l.a.createElement("td",null,"style"),l.a.createElement("td",null,"style"),l.a.createElement("td",null,"Used to override default styling"),l.a.createElement("td",null,"-"))))),l.a.createElement("section",null,l.a.createElement(v,null,"DropdownMenuItem"),l.a.createElement(w,null,"It defines the menu items for DropdownMenu.")),l.a.createElement("section",null,l.a.createElement(v,null,"Props"),l.a.createElement("table",{className:"table"},l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Props"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"),l.a.createElement("th",null,"Default"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"children"),l.a.createElement("td",null,"ReactNode"),l.a.createElement("td",null,"Can contain any element node or text"),l.a.createElement("td",null,"-")),l.a.createElement("tr",null,l.a.createElement("td",null,"style"),l.a.createElement("td",null,"style"),l.a.createElement("td",null,"Used to override default styling"),l.a.createElement("td",null,"-")),l.a.createElement("tr",null,l.a.createElement("td",null,"danger(optional)"),l.a.createElement("td",null,"boolean"),l.a.createElement("td",null,"Highlights the item with default color"),l.a.createElement("td",null,"false")),l.a.createElement("tr",null,l.a.createElement("td",null,"onClick"),l.a.createElement("td",null,"function"),l.a.createElement("td",null,"Handles onClick event for an item"),l.a.createElement("td",null,"-"))))),l.a.createElement("section",null,l.a.createElement(v,null,"DropdownMenuSeparator"),l.a.createElement(w,null,"It provides some default margin and padding to top and bottom with default border styling.")),l.a.createElement("section",null,l.a.createElement(v,null,"Example"),l.a.createElement(w,null,"To achieve dropdown functionality use should wrap"," ",l.a.createElement("span",{className:"highlight"},"DropdownMenu")," component with"," ",l.a.createElement("span",{className:"highlight"},"Dropdown")," component.",l.a.createElement(k,null,'\nimport React from "react";\nimport { Dropdown, DropdownMenu, DropdownMenuItem, DropdownMenuSeparator } from "react-uicomp";\n\nexport default function DropdownComponent() {\n  return (\n    <Dropdown triggerElement={() => <button>Toggle Menu</button>}>\n      <DropdownMenu>\n        <DropdownMenuItem onClick={() => false}>Item 1</DropdownMenuItem>\n        <DropdownMenuItem onClick={() => false}>Item 2</DropdownMenuItem>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem onClick={() => false} danger={true}>\n          Item 3\n        </DropdownMenuItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n          '))))},H=function(){var e=Object(n.useState)(!1),t=Object(E.a)(e,2),a=t[0],o=t[1];return l.a.createElement("div",null,l.a.createElement("button",{className:"button",onClick:function(){return o(!0)}},"Open Modal"),l.a.createElement(g.g,{visible:a,onOutsideClick:function(){return o(!1)}},"Modal Content Goes Here...",l.a.createElement("div",{style:{marginTop:20,display:"flex",justifyContent:"flex-end"}},l.a.createElement("button",{className:"button",onClick:function(){return o(!1)}},"Close Modal"))))},V=function(){return Object(n.useEffect)((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"Modal"),l.a.createElement("section",null,l.a.createElement(w,null,"UI component for Modal which provides easy use for creating extremely fluid animated modal.")),l.a.createElement("section",null,l.a.createElement(v,null,"Demo"),l.a.createElement(H,null)),l.a.createElement("section",null,l.a.createElement(v,null,"Props"),l.a.createElement("table",{className:"table"},l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Props"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"),l.a.createElement("th",null,"Default"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"children"),l.a.createElement("td",null,"ReactNode"),l.a.createElement("td",null,"Can contain any element which is placed inside modal component"),l.a.createElement("td",null,"-")),l.a.createElement("tr",null,l.a.createElement("td",null,"visible"),l.a.createElement("td",null,"boolean"),l.a.createElement("td",null,"Determines whether the modal is visible or not."),l.a.createElement("td",null,"false")),l.a.createElement("tr",null,l.a.createElement("td",null,"onOutsideClick(optional)"),l.a.createElement("td",null,"function"),l.a.createElement("td",null,"Function that is called when clicked outside of modal if passed."),l.a.createElement("td",null,"-")),l.a.createElement("tr",null,l.a.createElement("td",null,"style"),l.a.createElement("td",null,"style"),l.a.createElement("td",null,"Used to override default styling"),l.a.createElement("td",null,"-")),l.a.createElement("tr",null,l.a.createElement("td",null,"isAnimated"),l.a.createElement("td",null,"boolean"),l.a.createElement("td",null,"Should animate or not while modal open or close"),l.a.createElement("td",null,"true")),l.a.createElement("tr",null,l.a.createElement("td",null,"animationType"),l.a.createElement("td",null,'"fade" | "expand" | "elastic"'),l.a.createElement("td",null,"Type of animation for modal"),l.a.createElement("td",null,'"expand"'))))),l.a.createElement("section",null,l.a.createElement(v,null,"Example"),l.a.createElement(w,null,l.a.createElement(k,null,'\nimport React, { useState } from "react";\nimport { Modal } from "react-uicomp";\n\nexport default function() {\n  const [visible, setVisible] = useState(false);\n\n  return (\n    <div>\n      <button onClick={() => setVisible(true)}>\n        Open Modal\n      </button>\n      <Modal visible={visible} onOutsideClick={() => setVisible(false)}>\n        Modal Content Goes Here...\n        <div\n          style={{\n            marginTop: 20,\n            display: "flex",\n            justifyContent: "flex-end",\n          }}\n        >\n          <button onClick={() => setVisible(false)}>\n            Close Modal\n          </button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n          '))))},B=a(76),L=function(){var e=Object(n.useState)(!1),t=Object(E.a)(e,2),a=t[0],o=t[1],r=Object(g.o)(),c=r.handler,i=r.toast;return l.a.createElement("div",null,l.a.createElement("button",{className:"button",onClick:function(){o((function(e){return!e})),i({message:Object(B.loremIpsum)(),type:a?"success":"error"})}},"Open Toast"),l.a.createElement(g.h,Object.assign({},c,{style:{width:300}})))},W=[{key:"Home",name:"Home",path:"/",component:function(){var e=Object(g.n)().navigation;return Object(n.useEffect)((function(){e.navigate("/docs/quick-start")}),[e]),l.a.createElement(l.a.Fragment,null)},restricted:!0},{key:"QuickStart",name:"Quick Start",path:"/docs/quick-start",component:_,restricted:!0},{key:"QuickStart",name:"Quick Start",path:"/docs/why-use-react-uicomp",component:T,restricted:!0},{name:"Navigation",key:"Navigation",path:"/docs/navigation",component:C,restricted:!0},{name:"Auth",key:"Auth",path:"/docs/auth",component:j,restricted:!0},{name:"Use Navigation",path:"/docs/use-navigation",key:"UseNavigation",component:O,restricted:!0},{name:"Use Auth",key:"UseAuth",path:"/docs/use-auth",component:A,restricted:!0},{name:"Theme Provider",key:"ThemeProvider",path:"/docs/theme",component:I,restricted:!0},{name:"Use Theme",key:"Use Theme",path:"/docs/use-theme",component:x,restricted:!0},{name:"Use Animated Value",key:"UseAnimatedValue",path:"/docs/use-animated-value",component:S,restricted:!0},{name:"AnimatedBlock",path:"/docs/animated-block",component:R,restricted:!0},{name:"UseMountedValue",path:"/docs/use-mounted-value",component:function(){return Object(n.useEffect)((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"useMountedValue()"),l.a.createElement("section",null,l.a.createElement(w,null,l.a.createElement("span",{className:"highlight"},"useMountedValue()")," hook provides us a way to unmount component from the DOM Tree after animation is complete. Rather than returning animated node directly like"," ",l.a.createElement("span",{className:"highlight"},"useAnimatedValue()"),", it returns a function that accepts a functional component with two parameters. First animationNode (same retured by"," ",l.a.createElement("span",{className:"highlight"},"useAnimatedValue()")," accessed with .value) and second isMounted (boolean). The second parameter isMounted is checked conditionally to mount or unmount a component from DOM Tree."),l.a.createElement(w,null,"Now lets create a mounting animation with"," ",l.a.createElement("span",{className:"highlight"},"useMountedValue()")," hook."),l.a.createElement(k,null,"\nconst [open, setOpen] = useState(false);\nconst mountedValue = useMountedValue(open, [0, 1, 0]);\n"),l.a.createElement(w,null,"As you noticed mounted value accepts two arguments. First one is boolean that is used to define whether the element is mounted or not, but its actually animated. Second one is array with three phases. First one is ",l.a.createElement("span",{className:"highlight"},"initial phase"),", second one is ",l.a.createElement("span",{className:"highlight"},"enter phase")," and third one is"," ",l.a.createElement("span",{className:"highlight"},"exit phase"),". By default initial phase is animated from its value to enter phase (in this case 0 to 1 by default) and when first argument is changed in future it toggles between enter and exit phase. When open is true it animates from 0 to 1. When open is false then it animates from 1 to 0 and isMounted becomes false."),l.a.createElement("iframe",{src:"https://codesandbox.io/embed/react-uicomp-usemountedvalue-hook-k03t7?fontsize=14&hidenavigation=1&theme=dark",style:{width:"100%",height:500,border:0,borderRadius:4,overflow:"hidden"},title:"react-uicomp useMountedValue() hook",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"})))},restricted:!0},{name:"Interpolate",path:"/docs/interpolate",component:M,restricted:!0},{name:"ScrollableBlock",path:"/docs/scrollable-block",component:function(){return Object(n.useEffect)((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"ScrollableBlock"),l.a.createElement("section",null,l.a.createElement(w,null,l.a.createElement("span",{className:"highlight"},"ScrollableBlock")," is a Higher Order Component which is used for animating components when it appears on the viewport. You can specify either you want to animate components when it appears on the viewport for the first time or every time it appears on the viewport."),l.a.createElement(w,null,"So lets go ahead and see how it works."),l.a.createElement(w,null,l.a.createElement("span",{className:"highlight"},"ScrollableBlock")," takes a child as a function and passes an"," ",l.a.createElement("span",{className:"highlight"},"Animated Node")," returned from useAnimatedValue() as a first argument which value animates from 0 to 1 when it appears on viewport.",l.a.createElement(k,null,"\n<ScrollableBlock>\n{(animation) => (\n  //...\n)}\n</ScrollableBlock>\n        ")),l.a.createElement(w,null,"So, you could use ",l.a.createElement("span",{className:"highlight"},"AnimatedBlock")," ","inside of it to animate its styles.",l.a.createElement(k,null,'\n<ScrollableBlock direction="both">\n{(animation) => (\n  <AnimatedBlock\n    style={{\n      opacity: animation.value,\n      transform: interpolate(animation.value, [0, 1], ["scale(0.6)", "scale(1)"])\n    }}\n    className="item"\n  />\n)}\n</ScrollableBlock>\n        '),l.a.createElement(w,null,"Here in this example, I have used animated node for opacity and interpolated it from scale 0.6 to 1."," ",l.a.createElement("span",{className:"highlight"},"ScrollableBlock")," accepts"," ",l.a.createElement("span",{className:"highlight"},"direction"),'prop which can be either "both" or "single". "both" represents always animate when it appears on the viewport and "single" which is by default represents at the first time only.'))),l.a.createElement("section",null,l.a.createElement("iframe",{src:"https://codesandbox.io/embed/scrollableblock-q128z?fontsize=14&hidenavigation=1&theme=dark",style:{width:"100%",height:500,border:0,borderRadius:4,overflow:"hidden"},title:"ScrollableBlock",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"})))},restricted:!0},{name:"useScroll",path:"/docs/use-scroll",component:function(){return Object(n.useEffect)((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"useScroll()"),l.a.createElement("section",null,l.a.createElement(w,null,l.a.createElement("span",{className:"highlight"},"useScroll()")," hook lets you to listen how much a document or an element is scrolled. It accepts a callback function as its argument which gives scroll events with following properties:"),l.a.createElement("ul",{className:"list"},l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"scrollX"))," ","how much document / element has scrolled horizontally."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"scrollY"))," ","how much document / element has scrolled vertically."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"isScrolling"))," ","boolean representing either the document / element is currently scrolling or not."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"scrollDirection"))," ","represents which direction the document / element is scrolling."," ",l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"ScrollDirectionState"))," ","enum with ",'"UP | DOWN | RIGHT | LEFT | UNDETERMINED"'," is used to compare with it."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"velocityX"))," ","represents the horizontal velocity. Positive represents right and negative represents left."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"velocityY"))," ","represents the vertical velocity. Positive represents bottom and negative represents top."))),l.a.createElement("section",null,l.a.createElement(v,null,"Example"),l.a.createElement(k,null,'\nimport React from "react";\nimport { useScroll, ScrollDirectionState } from "react-uicomp";\n\nexport default function UseAnimatedValue() {\n  useScroll((event) => {\n    const { scrollX, scrollDirection } = event;\n\n    if(scrollDirection === ScrollDirectionState.RIGHT) {\n      console.log("DOCUMENT IS SCROLLING RIGHT", scrollX);\n    }\n  });\n\n  return (\n    // ...\n  );\n}\n       '),l.a.createElement(w,null,"To bind useScroll() hook to a specific element, you just have to bind it to that element. To bind it, it returns a function with can be spread into an element."),l.a.createElement(k,null,'\nimport React from "react";\nimport { useScroll, ScrollDirectionState } from "react-uicomp";\n\nexport default function UseAnimatedValue() {\n  const bind = useScroll((event) => { // bind is a function\n    const { scrollX, scrollDirection } = event;\n\n    if(scrollDirection === ScrollDirectionState.RIGHT) {\n      console.log("DOCUMENT IS SCROLLING RIGHT", scrollX);\n    }\n  });\n\n  return (\n    <>\n      // ...\n      <div {...bind()}> // spread here, if its content is scrolled then above callback is called.\n        // ...\n      </div>\n    </>\n  );\n}\n       ')))},restricted:!0},{name:"useMeasure",path:"/docs/use-measure",component:function(){return Object(n.useEffect)((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"useMeasure()"),l.a.createElement("section",null,l.a.createElement(w,null,l.a.createElement("span",{className:"highlight"},"useMeasure()")," hook lets you to measure the any HTML Element you want to measure. It accepts a callback function as its argument which gives the measurement event with following properties:"),l.a.createElement("ul",{className:"list"},l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"left"))," ","represents how far is the element from the left of a document. It also accounts horizontal page offset."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"top"))," ","represents how far is the element from the top of a document. It also accounts vertical page offset."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"width"))," ","represents the width of an element."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"height"))," ","represents the height of an element."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"vLeft"))," ","represents left offset of element relative to viewport."),l.a.createElement("li",{className:"list__item"},l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"vTop"))," ","represents top offset of element relative to viewport."))),l.a.createElement("section",null,l.a.createElement(v,null,"Example"),l.a.createElement(w,null,"To bind useMeasure() hook to a specific element, you just have to bind it to that element. To bind it, it returns a function with can be spread into an element."),l.a.createElement(k,null,'\nimport React from "react";\nimport { useMeasure } from "react-uicomp";\n\nexport default function UseAnimatedValue() {\n  const bind = useMeasure((event) => { // bind is a function\n    const { width, height } = event;\n\n    console.log("WIDTH OF AN ELEMENT", width);\n    console.log("HEIGHT OF AN ELEMENT", height);\n  });\n\n  return (\n    <>\n      // ...\n      <div {...bind()}> // spread here, if its content is scrolled then above callback is called.\n        // ...\n      </div>\n    </>\n  );\n}\n       '),l.a.createElement(w,null,l.a.createElement("span",{className:"highlight"},l.a.createElement("b",null,"useMeasure()"))," ","hook also has feature to measure multiple elements at once. To measure multiple element pass an index to bind() function when spread. And the measured values in callback will have array of values."),l.a.createElement(k,null,'\nimport React from "react";\nimport { useMeasure } from "react-uicomp";\n\nexport default function UseAnimatedValue() {\n  const bind = useMeasure((event) => { // bind is a function\n    const { width, height } = event;\n\n    console.log("WIDTHS OF AN ELEMENT", width); // returns array of widths \n    console.log("HEIGHTS OF AN ELEMENT", height); // returns array of heights \n  });\n\n  return (\n    <>\n      // ...\n      {\n        ARRAY_ELEMENT.map((item, index) => (\n          <div key={index} {...bind(index)}> // spread here with index\n            // ...\n          </div>\n        ))\n      }\n      \n    </>\n  );\n}\n       '),l.a.createElement(v,null,"Demo"),l.a.createElement("iframe",{src:"https://codesandbox.io/embed/animated-active-tab-lh8u2?fontsize=14&hidenavigation=1&theme=dark&view=preview",style:{width:"100%",height:500,border:0,borderRadius:4,overflow:"hidden"},title:"Animated Active Tab",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"})))},restricted:!0},{name:"useWindowDimension",path:"/docs/use-window-dimension",component:function(){return Object(n.useEffect)((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"useWindowDimension()"),l.a.createElement("section",null,l.a.createElement(w,null,"Coming soon...")))},restricted:!0},{name:"useOutsideClick",path:"/docs/use-outside-click",component:function(){return Object(n.useEffect)((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"useOutsideClick()"),l.a.createElement("section",null,l.a.createElement(w,null,"Coming soon...")))},restricted:!0},{name:"Dropdown",path:"/docs/dropdown",component:F,restricted:!0},{name:"DropdownMenu",path:"/docs/dropdown-menu",component:U,restricted:!0},{name:"Modal",path:"/docs/modal",component:V,restricted:!0},{name:"Toast",path:"/docs/toast",component:function(){return Object(n.useEffect)((function(){window.scrollTo(0,0)}),[]),l.a.createElement("div",null,l.a.createElement(b,null,"Toast"),l.a.createElement("section",null,l.a.createElement(w,null,"UI component for Toast Notification allowing you to simply add snack for you notification.")),l.a.createElement("section",null,l.a.createElement(v,null,"Demo"),l.a.createElement(L,null)),l.a.createElement("section",null,l.a.createElement(v,null,"Props"),l.a.createElement("table",{className:"table"},l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Props"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"),l.a.createElement("th",null,"Default"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"timeout (optional)"),l.a.createElement("td",null,"number"),l.a.createElement("td",null,"Number of milliseconds for a notification to dismiss."),l.a.createElement("td",null,"4000")),l.a.createElement("tr",null,l.a.createElement("td",null,"style (optional)"),l.a.createElement("td",null,"style"),l.a.createElement("td",null,"Style object for styling notification card."),l.a.createElement("td",null,"-")),l.a.createElement("tr",null,l.a.createElement("td",null,"containerStyle (optional)"),l.a.createElement("td",null,"style"),l.a.createElement("td",null,"Style object for styling notification container."),l.a.createElement("td",null,"-")),l.a.createElement("tr",null,l.a.createElement("td",null,"successColor (optional)"),l.a.createElement("td",null,"string"),l.a.createElement("td",null,"Background color for success toast."),l.a.createElement("td",null,'"#68A362"')),l.a.createElement("tr",null,l.a.createElement("td",null,"errorColor (optional)"),l.a.createElement("td",null,"string"),l.a.createElement("td",null,"Background color for error toast."),l.a.createElement("td",null,'"#FFB17A"')),l.a.createElement("tr",null,l.a.createElement("td",null,"closeIconColor (optional)"),l.a.createElement("td",null,"string"),l.a.createElement("td",null,"Color for close icon."),l.a.createElement("td",null,'"#FFFFFF"')),l.a.createElement("tr",null,l.a.createElement("td",null,"closeIconVisible (optional)"),l.a.createElement("td",null,"boolean"),l.a.createElement("td",null,"Should close icon be visible or not."),l.a.createElement("td",null,"true")),l.a.createElement("tr",null,l.a.createElement("td",null,"dismissOnClick (optional)"),l.a.createElement("td",null,"boolean"),l.a.createElement("td",null,"Dismiss the message on click on card itself."),l.a.createElement("td",null,"false"))))),l.a.createElement("section",null,l.a.createElement(v,null,"useToast()"),l.a.createElement(w,null,"React UI Comp provides ",l.a.createElement("span",{className:"highlight"},"useToast()")," ","hook to handle toast notification.",l.a.createElement("span",{className:"highlight"},"useToast()")," hook returns object with following keys:"),l.a.createElement("table",{className:"table"},l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Props"),l.a.createElement("th",null,"Type"),l.a.createElement("th",null,"Description"),l.a.createElement("th",null,"Default"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"handler"),l.a.createElement("td",null,"object"),l.a.createElement("td",null,"It should be spread to Component."),l.a.createElement("td",null,"-")),l.a.createElement("tr",null,l.a.createElement("td",null,"toast"),l.a.createElement("td",null,"function"),l.a.createElement("td",null,'Function which accepts an object { message: string, type: "success" | "error" }'),l.a.createElement("td",null,"-"))))),l.a.createElement("section",null,l.a.createElement(v,null,"Example"),l.a.createElement(w,null,l.a.createElement(k,null,'\nimport React from "react";\nimport { Toast, useToast } from "react-uicomp";\n\nexport default function() {\n  const { handler, toast } = useToast();\n\n  return (\n    <div>\n      <button onClick={() => toast({ message: "Hey, Toast!", type: "success" })}>\n        Open Toast\n      </button>\n\n      <Toast {...handler} /> {/* Spread handler here */}\n    </div>\n  );\n};\n          '))))},restricted:!0},{path:null,component:f}],G={container:{cursor:"pointer"},menuitem:{width:40,height:4,background:"#353535",marginBottom:6,transformOrigin:"center"}};function q(){var e=Object(g.k)().drawerOpen,t=Object(g.j)(e);return l.a.createElement("div",{style:G.container},l.a.createElement(g.a,{style:Object(m.a)(Object(m.a)({},G.menuitem),{},{transform:Object(g.i)(t.value,[0,1],["rotate(0deg) translate(0px, 0px)","rotate(45deg) translate(4px, 0px)"])})}),l.a.createElement(g.a,{style:Object(m.a)(Object(m.a)({},G.menuitem),{},{opacity:Object(g.i)(t.value,[0,1],[1,0])})}),l.a.createElement(g.a,{style:Object(m.a)(Object(m.a)({},G.menuitem),{},{transform:Object(g.i)(t.value,[0,1],["rotate(0deg) translate(0px, 0px)","rotate(-45deg) translate(12px, -13px)"])})}))}var z=a(77),X=a.n(z),Y=function(){var e=Object(g.k)().setDrawerOpen;return l.a.createElement("div",{className:"header"},l.a.createElement("nav",{className:"header__wrapper"},l.a.createElement("div",{className:"header__menu",onClick:function(){return e((function(e){return!e}))}},l.a.createElement(q,null)),l.a.createElement("img",{src:X.a,alt:"React UI Comp Logo"}),l.a.createElement("h2",{className:"header__title"},"React UI Comp"),l.a.createElement("div",{className:"npmversion"},l.a.createElement("a",{href:"https://badge.fury.io/js/react-uicomp"},l.a.createElement("img",{src:"https://badge.fury.io/js/react-uicomp.svg",alt:"npm version",style:{width:110,height:20}})))))},Q=a(128),J=a(78),K=function(e){var t=e.title,a=e.navItems,o=Object(g.l)(),r=o.handler,c=o.height,i=Object(n.useState)(!0),s=Object(E.a)(i,2),m=s[0],u=s[1],d=Object(g.j)(m?c:0);return l.a.createElement("div",{className:"sidenav__nav-group"},l.a.createElement("h3",{className:"sidenav__title",onClick:function(){return u(!m)}},l.a.createElement("span",{className:"sidenav-title"},t),l.a.createElement("span",{className:m?"dropdownicon active":"dropdownicon"},l.a.createElement(Q.a,{size:12}))),l.a.createElement(g.a,{style:{height:d.value,overflow:"hidden"}},l.a.createElement("ul",Object.assign({},r,{className:"sidenav__navitems",style:{paddingBottom:5}}),a.map((function(e,t){return l.a.createElement("li",{key:t,className:"sidenav__navitem"},l.a.createElement(J.ActiveLink,{to:e.link,className:"sidenav__navlink",activeClassName:"sidenav__navlink--active"},e.name))})))))},Z=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(K,{title:"Introduction",navItems:[{name:"Quick Start",link:"/docs/quick-start"},{name:"Why use React UI Comp?",link:"/docs/why-use-react-uicomp"}]}),l.a.createElement(K,{title:"Animation",navItems:[{name:"useAnimatedValue()",link:"/docs/use-animated-value"},{name:"AnimatedBlock",link:"/docs/animated-block"},{name:"interpolate()",link:"/docs/interpolate"},{name:"useMountedValue()",link:"/docs/use-mounted-value"},{name:"ScrollableBlock",link:"/docs/scrollable-block"},{name:"useScroll()",link:"/docs/use-scroll"},{name:"useMeasure()",link:"/docs/use-measure"},{name:"useWindowDimension()",link:"/docs/use-window-dimension"},{name:"useOutsideClick()",link:"/docs/use-outside-click"}]}),l.a.createElement(K,{title:"Components",navItems:[{name:"Dropdown",link:"/docs/dropdown"},{name:"DropdownMenu",link:"/docs/dropdown-menu"},{name:"Modal",link:"/docs/modal"},{name:"Toast",link:"/docs/toast"}]}))},$=function(){var e=Object(g.k)().drawerOpen,t=Object(g.m)(e,[0,1,0]);return l.a.createElement("div",{className:"sidenav"},l.a.createElement("div",{className:"sidenav-web"},l.a.createElement(Z,null)),t((function(e,t){return t&&l.a.createElement(g.a,{style:{transform:Object(g.i)(e.value,[0,1],["translateX(-280px)","translateX(0px)"])},className:"sidenav-mobile"},l.a.createElement(Z,null))})))},ee=Object(g.p)((function(){var e=l.a.useState(!1),t=Object(E.a)(e,2),a=t[0],n=t[1];return l.a.createElement(g.b.Provider,{config:{isLoggedIn:!1,userRole:"user"},state:{drawerOpen:a,setDrawerOpen:n}},l.a.createElement(Y,null),l.a.createElement($,null),l.a.createElement("div",{className:"app"},l.a.createElement(g.b.Screens,null)))}),{routerType:"hash",publicPaths:W,privatePaths:[],userRoles:{user:{access:["*"]}}}),te=(a(124),a(125),Object(c.d)(p,Object(c.a)(s.a)));r.a.render(l.a.createElement(i.a,{store:te},l.a.createElement(ee,null)),document.querySelector("#root"))},77:function(e,t,a){e.exports=a.p+"static/media/react-uicomp.870c6785.svg"},84:function(e,t,a){e.exports=a(126)}},[[84,1,2]]]);
//# sourceMappingURL=main.e6e3e5bc.chunk.js.map